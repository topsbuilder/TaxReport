{"version":3,"sources":["utils/rest.client.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,gGAAgG;AAChG,uCAAuC;AACvC,uCAAuC;AACvC,iCAAiC;AAGjC,IAAa,UAAU;IAAvB;IAyDA,CAAC;IAAD,iBAAC;AAAD,CAzDA,AAyDC,IAAA;AAzDY,UAAU;IADtB,iBAAU,EAAE;GACA,UAAU,CAyDtB;AAzDY,gCAAU","file":"rest.client.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n//import { Headers, Http, URLSearchParams, Response, ResponseContentType } from '@angular/http';\r\n//import { Observable } from 'rxjs/Rx';\r\n//import 'rxjs/add/operator/toPromise';\r\n//import 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class RestClient {\r\n  //constructor(private http: Http) { }\r\n /* \r\n  getHeaders() : Headers {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Accept', 'application/json');\r\n    return headers;\r\n  }\r\n\r\n  getPdfHeaders() : Headers {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Accept', 'application/pdf');\r\n    return headers;\r\n  }  \r\n  \r\n  getDummyValue() {\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n  getHeaderParams() : URLSearchParams {\r\n    let params = new URLSearchParams();\r\n//    params.set('uuid', this.global.uuid);\r\n    params.set('token', this.getDummyValue());  // to avoid http caching\r\n    return params;\r\n  }\r\n  public setParam(params:URLSearchParams, key:string, val:string) {\r\n    if (val) {\r\n      params.set(key, val);\r\n    }\r\n  }\r\n      \r\n  paramsToJson(params:URLSearchParams) : string {\r\n    let entryMap = params.paramsMap.entries();\r\n    let val = null, i = 0, jsonParams = '';\r\n    while (val = entryMap.next().value) {\r\n      if (i > 0) { jsonParams += ','; }\r\n      jsonParams += ('\"' + val[0] + '\":\"' + val[1] + '\"'); \r\n      i++;\r\n    }\r\n    jsonParams = '{'+jsonParams+'}';\r\n    return jsonParams;\r\n  } \r\n     \r\n  public getData() {\r\n    let params = this.getHeaderParams();\r\n    console.log('getData...');\r\n    let url = \"http://samples.openweathermap.org/data/2.5/forecast?q=M%C3%BCnchen,DE&appid=b1b15e88fa797225412429c1c50c122a1\";\r\n    return this.http.get(url, { headers: this.getPdfHeaders() })\r\n      .map(res =>{\r\n        if (res.status < 200 || res.status >= 300) {\r\n          throw new Error('This request has failed ' + res.status);\r\n        } else {\r\n          return JSON.stringify(res.json());\r\n        }\r\n      });\r\n  } */    \r\n}"]}